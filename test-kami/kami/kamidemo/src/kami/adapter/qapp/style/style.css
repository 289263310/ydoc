@charset "UTF-8";
/**
 * Yo框架demo
 * Author: joy.du(飘零雾雨)
 * Time: 2015.2.11
 */
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/core/reset.scss
 * Css Reset
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.1.18
 * Note: only for mobile
 */
*,
::before,
::after {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
}

html {
    background-color: #fafafa;
    color: #212121;
    font-size: 100px;
    -webkit-user-select: none;
    user-select: none;
}

body {
    margin: 0;
    font-size: 14px;
    line-height: 1.5;
    font-family: Helvetica Neue, Helvetica, STHeiTi, sans-serif;
}

ul,
ol,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
form,
fieldset,
legend,
input,
textarea,
button,
p,
blockquote,
th,
td,
pre,
xmp {
    margin: 0;
    padding: 0;
}

input,
textarea,
button,
select,
pre,
xmp,
tt,
code,
kbd,
samp {
    line-height: inherit;
    font-family: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6,
small,
big,
input,
textarea,
button,
select {
    font-size: inherit;
}

address,
cite,
dfn,
em,
i,
optgroup,
var {
    font-style: normal;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
    table-layout: fixed;
    text-align: left;
}

ul,
ol,
menu {
    list-style: none;
}

fieldset,
img {
    border: 0;
    vertical-align: middle;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
    display: block;
}

audio,
canvas,
video {
    display: inline-block;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
    content: "\0020";
}

textarea,
pre,
xmp {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
}

textarea {
    resize: vertical;
}

input,
textarea,
button,
select
a {
    outline: 0 none;
}

input,
textarea,
button,
select {
    color: inherit;
}
input:disabled,
textarea:disabled,
button:disabled,
select:disabled {
    opacity: 1;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
    padding: 0;
    border: 0;
}

input[type="button"],
input[type="submit"],
input[type="reset"],
input[type="file"]::-webkit-file-upload-button {
    -webkit-appearance: none;
    appearance: none;
}

mark {
    background-color: transparent;
}

a,
ins,
s,
u,
del {
    text-decoration: none;
}

a,
img {
    -webkit-touch-callout: none;
}

a {
    color: #00afc7;
}

.g-clear::after,
.g-mod::after {
    display: block;
    overflow: hidden;
    clear: both;
    height: 0;
    content: "\0020";
}

@font-face {
    font-family: fontawesome-webfont;
    src: url("http://source.qunarzz.com/fonts/fontawesome/4.3.0/fontawesome-webfont.woff") format("woff"), url("http://source.qunarzz.com/fonts/fontawesome/4.3.0/fontawesome-webfont.ttf") format("truetype");
}
.yo-ico {
    font-family: fontawesome-webfont !important;
    font-style: normal;
    -webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: .1px;
    -moz-osx-font-smoothing: grayscale;
    vertical-align: middle;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Element: yo-btn
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.1.19
 ------------------------
 * 定义按钮使用方法
 * @method yo-btn
 * variables length(9)
 * @param {default | String} $name 定义按钮名称
 * @param {default | Color} $bordercolor 定义按钮边框色
 * @param {default | Color} $bgcolor 定义按钮背景色
 * @param {default | Color} $color 定义按钮文本色
 * @param {default | Length} $padding 定义按钮横向补白
 * @param {default | Length} $radius 定义按钮圆角
 * @param {default | Length} $font-size 定义按钮字号
 * @param {default | Length} $width 定义按钮宽度
 * @param {default | Length} $height 定义按钮高度
 */
.yo-btn {
    display: inline-block;
    overflow: hidden;
    padding: 0 1.2em;
    border: 0.01rem solid #e26704;
    box-shadow: inset 1px 1px rgba(255, 255, 255, 0.1);
    border-radius: 0.02rem;
    background-color: #ff801a;
    color: #fff;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
}
.yo-btn:focus, .yo-btn:active {
    opacity: .8;
}
.yo-btn-s {
    height: 0.28rem;
    line-height: 0.28rem;
    font-size: 0.12rem;
}
.yo-btn-m {
    height: 0.36rem;
    line-height: 0.36rem;
    font-size: 0.14rem;
}
.yo-btn-l {
    height: 0.44rem;
    line-height: 0.44rem;
    font-size: 0.16rem;
}
.yo-btn-stacked {
    display: block;
    width: 100%;
    clear: both;
}

.yo-btn-disabled {
    border-color: #bbb;
    background-color: #ccc;
    color: #f9f9f9;
    cursor: not-allowed;
}
.yo-btn-disabled, .yo-btn-disabled:focus, .yo-btn-disabled:active {
    opacity: .4;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Element: yo-input
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * 定义按钮使用方法
 * @method yo-input
 * variables length(9)
 * @param {default | String} $name 定义输入框名称
 * @param {default | Length} $width 定义输入框宽度
 * @param {default | Length} $height 定义输入框高度
 * @param {default | Length} $padding 定义输入框内补白
 * @param {default | Length} $radius 定义输入框圆角
 * @param {default | Color} $bordercolor 定义输入框边框色
 * @param {default | Color} $bgcolor 定义输入框背景色
 * @param {default | Color} $color 定义输入框文本色
 * @param {default | Color} $placeholder-color 定义输入框placeholder文本色
 */
.yo-input {
    width: 100%;
    height: 0.44rem;
    padding: 0.1rem;
    border: 0.01rem solid #ddd;
    border-radius: 0.02rem;
    background-color: transparent;
}
.yo-input, .yo-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    appearance: none;
}
.yo-input::-webkit-input-placeholder {
    color: #bbb;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Element: yo-badge
 * Author: joy.du(飘零雾雨)
 * edit: 2015.1.19
 -----------------------
 * @method badge
 * variables length(6)
 * @param {defailt | String} $name 定义名称
 * @param {defailt | Color} $bordercolor 定义边框色
 * @param {defailt | Color} $bgcolor 定义背景色
 * @param {defailt | Color} $color 定义文本色
 * @param {defailt | Number} $radius 定义圆角
 * @param {defailt | Length} $font-size 定义字号
 */
.yo-badge {
    display: inline-block;
    min-width: .2rem;
    min-height: .2rem;
    padding: .02rem .03rem;
    border: 0.01rem solid #f00;
    border-radius: 0.1rem;
    background-color: #f00;
    color: #fff;
    font-size: 0.14rem;
    line-height: 0.14rem;
    text-align: center;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * element: yo-checkbox
 * Author: joy.du(飘零雾雨)
 * Time: 2014.11.14
 -----------------------
 * @method yo-checkbox
 * variables length(9)
 * @param {default | String} $name 扩展的名称
 * @param {default | String} $type 类型，可选值：[circle | tick]
 * @param {default | Length} $size 元件大小
 * @param {default | Color} $bordercolor 边框色
 * @param {default | Color} $bgcolor 背景色
 * @param {default | Color} $on-bordercolor 激活时边框色
 * @param {default | Color} $on-bgcolor 激活时背景色
 * @param {default | Color} $on-color 激活时标记色
 * @param {default | Length} $radius 圆角半径
 */
.yo-checkbox {
    -webkit-appearance: none;
    appearance: none;
    position: relative;
    width: 0.2rem;
    height: 0.2rem;
    border-radius: 0.05rem;
    background-color: #fff;
    border: .01rem solid;
    border-color: #ddd;
    color: transparent;
    font-size: 0.2rem;
    cursor: pointer;
    vertical-align: middle;
}
.yo-checkbox::after {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    content: "✓";
    font-size: 68%;
    opacity: 0;
}
.yo-checkbox:checked {
    border-color: #2b94ff;
    background-color: #2b94ff;
}
.yo-checkbox:checked::after {
    color: #fff;
    opacity: 1;
}
.yo-checkbox:disabled {
    opacity: .4;
    border-color: #bbb !important;
    background-color: #ccc !important;
}
.yo-checkbox:disabled::after {
    color: #f9f9f9 !important;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Element: yo-loading
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 -----------------------
 * @method loading
 * variables length(5)
 * @param {defailt | String} $name 定义名称
 * @param {defailt | Length} $size 定义尺寸
 * @param {defailt | Color} $color 定义loading颜色
 * @param {defailt | Color} $mask-bgcolor 定义mask背景色
 * @param {defailt | Color} $bgcolor 定义背景色
 */
.yo-loading {
    display: block;
    position: absolute;
    z-index: 9999;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: hidden;
    min-width: 0.7rem;
    min-height: 0.7rem;
    background-color: rgba(0, 0, 0, 0.1);
    text-align: center;
}
.yo-loading:before, .yo-loading:after {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    content: "\0020";
}
.yo-loading:after {
    width: 0.04em;
    height: 0.04em;
    margin-top: -.1rem;
    background: transparent;
    border-radius: 50%;
    -webkit-animation: loading 1s infinite linear;
    animation: loading 1s infinite linear;
    -webkit-transform-origin: center;
    transform-origin: center;
    box-shadow: .35em -.29em, .47em -.03em 0 .01em, .4em .20em 0 .02em, .25em .38em 0 .03em, 0 .44em 0 .04em, -.22em .38em 0 .05em, -.38em .24em 0 .05em, -.42em 0 0 .06em, -.36em -.21em 0 .06em, -.2em -.36em 0 .06em, 0 -.41em 0 .07em;
    font-size: 0.5rem;
    color: #333;
}
.yo-loading:before {
    width: 1rem;
    height: 1rem;
    border-radius: .1rem;
}
.yo-loading > .inner {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    margin-top: 0.32rem;
    font-size: .12rem;
    color: #333;
}
@-webkit-keyframes loading {
    from {
        -webkit-transform: rotatez(0);
    }
    to {
        -webkit-transform: rotatez(360deg);
    }
}
@keyframes loading {
    from {
        transform: rotatez(0);
    }
    to {
        transform: rotatez(360deg);
    }
}
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * element: yo-checked
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.3.21
 -----------------------
 * @method yo-checked
 * variables length(9)
 * @param {default | String} $name 扩展的名称
 * @param {default | String} $type 类型，可选值：[circle | tick]
 * @param {default | Length} $size 元件大小
 * @param {default | Color} $bordercolor 边框色
 * @param {default | Color} $bgcolor 背景色
 * @param {default | Color} $on-bordercolor 激活时边框色
 * @param {default | Color} $on-bgcolor 激活时背景色
 * @param {default | Color} $on-color 激活时标记色
 * @param {default | Length} $radius 圆角半径
 */
.yo-checked {
    -webkit-appearance: none;
    appearance: none;
    position: relative;
    width: 0.2rem;
    height: 0.2rem;
    border-radius: 0.05rem;
    border: .01rem solid;
    color: transparent;
    font-size: 0.2rem;
    cursor: pointer;
    vertical-align: middle;
}
.yo-checked::after {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    content: "●";
    font-size: 68%;
    opacity: 0;
}
.yo-checked:checked::after {
    color: #2b94ff;
    opacity: 1;
}
.yo-checked:disabled {
    opacity: .4;
    border-color: #bbb !important;
    background-color: #ccc !important;
}
.yo-checked:disabled::after {
    color: #f9f9f9 !important;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Element: yo-range
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * 定义按钮使用方法
 * @method yo-range
 * variables length(4)
 * @param {default | String} $name 定义range名称
 * @param {default | Color} $inner-bgcolor 定义range已选择区域滑条色
 * @param {default | Color} $outer-bgcolor 定义range未选择区域滑条色
 * @param {default | Color} $ball-color 定义range滑块色
 */
.yo-range {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    line-height: 1;
}
.yo-range > input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    overflow: hidden;
    height: .28rem;
    background-image: -webkit-linear-gradient(right, #ccc 0%, #ccc 100%);
    background-image: linear-gradient(to right, #ccc 0%, #ccc 100%);
    background-size: 100% .04rem;
    background-repeat: no-repeat;
    background-position: center;
}
.yo-range > input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 0.2rem;
    height: 0.2rem;
    position: relative;
    border: 0;
    border-radius: 50%;
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.5), 1px 1px 5px rgba(0, 0, 0, 0.25);
    background-color: #fff;
}
.yo-range > input[type="range"]::-webkit-slider-thumb::before {
    position: absolute;
    top: 8px;
    left: -2001px;
    width: 2000px;
    height: 4px;
    background-color: #444;
    content: "\0020";
}
.yo-range > input[type="range"]:disabled {
    opacity: .4;
}
.yo-range > input[type="range"]:disabled::-webkit-slider-thumb::before {
    background-color: #444;
}
.yo-range > .yo-ico {
    font-size: .2rem;
}
.yo-range > .yo-ico:first-child {
    margin-right: .1rem;
}
.yo-range > .yo-ico:last-child {
    margin-left: .1rem;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * element: yo-radio
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.3.21
 -----------------------
 * @method yo-radio
 * variables length(9)
 * @param {default | String} $name 扩展的名称
 * @param {default | String} $type 类型，可选值：[circle | tick]
 * @param {default | Length} $size 元件大小
 * @param {default | Color} $bordercolor 边框色
 * @param {default | Color} $bgcolor 背景色
 * @param {default | Color} $on-bordercolor 激活时边框色
 * @param {default | Color} $on-bgcolor 激活时背景色
 * @param {default | Color} $on-color 激活时标记色
 * @param {default | Length} $radius 圆角半径
 */
.yo-radio {
    -webkit-appearance: none;
    appearance: none;
    position: relative;
    width: 0.2rem;
    height: 0.2rem;
    border-radius: 50%;
    background-color: #fff;
    border: .01rem solid;
    border-color: #ddd;
    color: transparent;
    font-size: 0.2rem;
    cursor: pointer;
    vertical-align: middle;
}
.yo-radio::after {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    content: "●";
    font-size: 68%;
    opacity: 0;
}
.yo-radio:checked {
    border-color: #2b94ff;
    background-color: #2b94ff;
}
.yo-radio:checked::after {
    color: #fff;
    opacity: 1;
}
.yo-radio:disabled {
    opacity: .4;
    border-color: #bbb !important;
    background-color: #ccc !important;
}
.yo-radio:disabled::after {
    color: #f9f9f9 !important;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Element: yo-loading
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 -----------------------
 * @method loading
 * variables length(5)
 * @param {defailt | String} $name 定义名称
 * @param {defailt | Length} $size 定义尺寸
 * @param {defailt | Color} $color 定义loading颜色
 * @param {defailt | Color} $mask-bgcolor 定义mask背景色
 * @param {defailt | Color} $bgcolor 定义背景色
 */
.yo-loading {
    display: block;
    position: absolute;
    z-index: 9999;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: hidden;
    min-width: 0.7rem;
    min-height: 0.7rem;
    background-color: rgba(0, 0, 0, 0.1);
    text-align: center;
}
.yo-loading:before, .yo-loading:after {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    content: "\0020";
}
.yo-loading:after {
    width: 0.04em;
    height: 0.04em;
    margin-top: -.1rem;
    background: transparent;
    border-radius: 50%;
    -webkit-animation: loading 1s infinite linear;
    animation: loading 1s infinite linear;
    -webkit-transform-origin: center;
    transform-origin: center;
    box-shadow: .35em -.29em, .47em -.03em 0 .01em, .4em .20em 0 .02em, .25em .38em 0 .03em, 0 .44em 0 .04em, -.22em .38em 0 .05em, -.38em .24em 0 .05em, -.42em 0 0 .06em, -.36em -.21em 0 .06em, -.2em -.36em 0 .06em, 0 -.41em 0 .07em;
    font-size: 0.5rem;
    color: #333;
}
.yo-loading:before {
    width: 1rem;
    height: 1rem;
    border-radius: .1rem;
}
.yo-loading > .inner {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    margin-top: 0.32rem;
    font-size: .12rem;
    color: #333;
}
@-webkit-keyframes loading {
    from {
        -webkit-transform: rotatez(0);
    }
    to {
        -webkit-transform: rotatez(360deg);
    }
}
@keyframes loading {
    from {
        transform: rotatez(0);
    }
    to {
        transform: rotatez(360deg);
    }
}
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Element: yo-loadtip
 * Author: joy.du(飘零雾雨)
 * edit: 2015.3.9
 -----------------------
 * @method loadtip
 * variables length(4)
 * @param {defailt | String} $name 定义名称
 * @param {defailt | Color} $color 定义文本色
 * @param {defailt | Number} $font-size 定义字号
 * @param {defailt | Length} $ico-color 定义ico颜色
 */
.yo-loadtip {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: inline-flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
    align-items: center;
    color: #666;
    font-size: 0.14rem;
}
.yo-loadtip > .yo-ico {
    display: block;
    -webkit-transform-origin: center;
    transform-origin: center;
    color: #00afc7;
    -webkit-transition: -webkit-transform .3s;
    transition: transform .3s;
    -webkit-transform: rotatez(0deg);
    transform: rotatez(0deg);
}
.yo-loadtip > .yo-ico-flip {
    -webkit-transform: rotatez(180deg);
    transform: rotatez(180deg);
}
.yo-loadtip > .yo-ico-loading {
    -webkit-animation: loadtip 1s infinite linear;
    animation: loadtip 1s infinite linear;
}
.yo-loadtip > .text {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    margin-left: .1rem;
}
.yo-loadtip > .text > .time {
    display: block;
    font-size: .12rem;
}
@-webkit-keyframes loadtip {
    from {
        -webkit-transform: rotatez(0);
    }
    to {
        -webkit-transform: rotatez(360deg);
    }
}
@keyframes loadtip {
    from {
        transform: rotatez(0);
    }
    to {
        transform: rotatez(360deg);
    }
}
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/fragment/classes.scss
 * fragment的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-header
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-header
 * variables length(10)
 * @param {default | String} $name 定义yo-header名称
 * @param {default | Length} $height 定义yo-header高度
 * @param {default | Length} $item-width 定义yo-header两侧子项宽度
 * @param {default | Length} $item-space 定义yo-header两侧子项离边界的间隙
 * @param {default | Color} $bordercolor 定义yo-header边框色
 * @param {default | Color} $bgcolor 定义yo-header背景色
 * @param {default | Color} $color 定义yo-header文本色
 * @param {default | Length} $font-size 定义yo-header文本大小
 * @param {default | Color} $item-color 定义yo-header两侧的子项文本色
 * @param {default | Length} $item-font-size 定义yo-header两侧的子项文本大小
 */
.yo-header {
    position: relative;
    overflow: hidden;
    height: 0.44rem;
    line-height: 0.44rem;
    border-bottom: 1px solid #ddd;
    background-color: #fff;
    font-size: 0.16rem;
    display: block;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    text-align: center;
}
.yo-header > .title {
    display: block;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    margin: 0 0.6rem;
}
.yo-header > .regret,
.yo-header > .affirm {
    position: absolute;
    top: 0;
    width: 0.6rem;
    font-size: 0.14rem;
    color: #00afc7;
    cursor: pointer;
}
.yo-header > .regret:active,
.yo-header > .affirm:active {
    opacity: .5;
}
.yo-header > .regret {
    left: 0;
    padding-left: 0.15rem;
    text-align: left;
}
.yo-header > .affirm {
    right: 0;
    padding-right: 0.15rem;
    text-align: right;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/fragment/classes.scss
 * fragment的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Fragment: yo-list
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-list
 * variables length(14)
 * @param {default|String} $name 定义list名称
 * @param {default|Length} $margin 定义list外边距
 * @param {default|Boole} $is-outline 定义list是否需要轮廓（即外边框）
 * @param {default|Length} $radius 定义list圆角
 * @param {default|Color} $bordercolor 定义list边框色
 * @param {default|Length} $item-padding 定义list项的内补白
 * @param {default|Length} $label-padding 定义list分组标题内补白
 * @param {default|Color} $label-bgcolor 定义list分组标题背景色
 * @param {default|Color} $active-bgcolor 定义list点击反馈背景色
 * @param {default|Color} $on-bgcolor 定义list选中背景色
 * @param {default|Color} $item-bordercolor 定义list子项边框色
 * @param {default|Color} $label-bordercolor 定义list子项组头边框色
 * @param {default|Length} $item-font-size 定义list项字号
 * @param {default|Length} $label-font-size 定义list列表组头字号
 */
.yo-list {
    margin: -0.01rem -0.01rem 0 -0.01rem;
}
.yo-list > .label,
.yo-list > .item,
.yo-list > .yo-panel > .front {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
    align-items: center;
}
.yo-list > .label > .mark:not(:last-child),
.yo-list > .label > .yo-ico:not(:last-child),
.yo-list > .item > .mark:not(:last-child),
.yo-list > .item > .yo-ico:not(:last-child),
.yo-list > .yo-panel > .front > .mark:not(:last-child),
.yo-list > .yo-panel > .front > .yo-ico:not(:last-child) {
    margin-right: .1rem;
}
.yo-list > .label > .flex,
.yo-list > .item > .flex,
.yo-list > .yo-panel > .front > .flex {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
}
.yo-list > .label > .mark,
.yo-list > .label > .yo-ico,
.yo-list > .label > .col,
.yo-list > .label > .flex,
.yo-list > .item > .mark,
.yo-list > .item > .yo-ico,
.yo-list > .item > .col,
.yo-list > .item > .flex,
.yo-list > .yo-panel > .front > .mark,
.yo-list > .yo-panel > .front > .yo-ico,
.yo-list > .yo-panel > .front > .col,
.yo-list > .yo-panel > .front > .flex {
    display: block;
}
.yo-list > .label.tr,
.yo-list > .item.tr,
.yo-list > .yo-panel > .front.tr {
    padding: 0;
}
.yo-list > .label {
    margin-top: -1px;
    padding: 0.03rem 0.1rem;
    border: 1px solid #ddd;
    border-width: 1px 0;
    background-color: #fafafa;
    color: #9e9e9e;
    font-size: 0.13rem;
    font-weight: normal;
}
.yo-list > .label > .col {
    padding: 0.03rem 0.1rem;
}
.yo-list > .item,
.yo-list > .yo-panel > .front {
    padding: 0.11rem;
}
.yo-list > .item {
    min-height: .44rem;
    border-bottom: 0.01rem solid #ddd;
    background-color: #fff;
    color: #212121;
    font-size: 0.14rem;
}
.yo-list > .item:last-child {
    margin-bottom: -1px;
}
.yo-list > .item-stacked {
    display: block;
}
.yo-list > .item-stacked > .mark {
    padding-bottom: 5px;
}
.yo-list > .item-input > .yo-input {
    height: auto;
    padding: 0;
    border: 0;
}
.yo-list > .item-input, .yo-list > .item-active, .yo-list > .item-on, .yo-list > .item-light {
    cursor: pointer;
}
.yo-list > .item.item-active:active, .yo-list > .item.item-light {
    background-color: #f8f8f8;
}
.yo-list > .item > .col {
    padding: 0.11rem;
}
.yo-list > .yo-panel {
    display: block;
    padding: 0;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/fragment/classes.scss
 * fragment的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-table
 * Author: joy.du(飘零雾雨)
 * Time: 2015.1.25
 -----------------------
 * method yo-table
 * variables length(11)
 * param {default|String} $name 定义table名称
 * param {default|String} $width 定义table长度
 * param {default|Boole} $has-vertical-border 定义table是否需要纵向边框
 * param {default|Length} $thead-padding 定义table头部内补白
 * param {default|Length} $tbody-padding 定义table主体内补白
 * param {default|Color} $bordercolor 定义table边框色
 * param {default|Color} $thead-bgcolor 定义table头部背景色
 * param {default|Color} $odd-bgcolor 定义table奇数行背景色
 * param {default|Color} $even-bgcolor 定义table偶数行背景色
 * param {default|Color} $active-bgcolor 定义table激活背景色
 * param {default|Color} $on-bgcolor 定义table选中背景色
 */
.yo-table {
    width: 100%;
    background-color: #fff;
}
.yo-table thead {
    background-color: #eee;
}
.yo-table thead th {
    padding: 0.05rem 0.1rem;
}
.yo-table td {
    padding: 0.1rem;
}
.yo-table th,
.yo-table td {
    border-width: 0 0 1px 0;
    border-style: solid;
    border-color: #ddd;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/fragment/classes.scss
 * fragment的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Element: yo-btn
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.1.19
 ------------------------
 * 定义按钮使用方法
 * @method yo-btn
 * variables length(9)
 * @param {default | String} $name 定义按钮名称
 * @param {default | Color} $bordercolor 定义按钮边框色
 * @param {default | Color} $bgcolor 定义按钮背景色
 * @param {default | Color} $color 定义按钮文本色
 * @param {default | Length} $padding 定义按钮横向补白
 * @param {default | Length} $radius 定义按钮圆角
 * @param {default | Length} $font-size 定义按钮字号
 * @param {default | Length} $width 定义按钮宽度
 * @param {default | Length} $height 定义按钮高度
 */
.yo-btn {
    display: inline-block;
    overflow: hidden;
    padding: 0 1.2em;
    border: 0.01rem solid #e26704;
    box-shadow: inset 1px 1px rgba(255, 255, 255, 0.1);
    border-radius: 0.02rem;
    background-color: #ff801a;
    color: #fff;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
}
.yo-btn:focus, .yo-btn:active {
    opacity: .8;
}
.yo-btn-s {
    height: 0.28rem;
    line-height: 0.28rem;
    font-size: 0.12rem;
}
.yo-btn-m {
    height: 0.36rem;
    line-height: 0.36rem;
    font-size: 0.14rem;
}
.yo-btn-l {
    height: 0.44rem;
    line-height: 0.44rem;
    font-size: 0.16rem;
}
.yo-btn-stacked {
    display: block;
    width: 100%;
    clear: both;
}

.yo-btn-disabled {
    border-color: #bbb;
    background-color: #ccc;
    color: #f9f9f9;
    cursor: not-allowed;
}
.yo-btn-disabled, .yo-btn-disabled:focus, .yo-btn-disabled:active {
    opacity: .4;
}

/**
 * Widget: yo-btnbar
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-btnbar
 * variables length(2)
 * @param {default | String} $name 定义yo-btnbar名称
 * @param {default | auto | Length} $radius 定义yo-btnbar圆角，当值为auto时，圆角大小取决于按钮的圆角大小
 */
.yo-btnbar {
    display: inline-block;
    vertical-align: middle;
}
.yo-btnbar > .yo-btn {
    float: left;
}
.yo-btnbar > .yo-btn:not(:first-child) {
    margin-left: -1px;
}
.yo-btnbar > .yo-btn:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}
.yo-btnbar > .yo-btn:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}
.yo-btnbar > .yo-btn:not(:first-child):not(:last-child) {
    border-radius: 0;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Element: yo-btn
 * Author: joy.du(飘零雾雨)
 * Edit: 2015.1.19
 ------------------------
 * 定义按钮使用方法
 * @method yo-btn
 * variables length(9)
 * @param {default | String} $name 定义按钮名称
 * @param {default | Color} $bordercolor 定义按钮边框色
 * @param {default | Color} $bgcolor 定义按钮背景色
 * @param {default | Color} $color 定义按钮文本色
 * @param {default | Length} $padding 定义按钮横向补白
 * @param {default | Length} $radius 定义按钮圆角
 * @param {default | Length} $font-size 定义按钮字号
 * @param {default | Length} $width 定义按钮宽度
 * @param {default | Length} $height 定义按钮高度
 */
.yo-btn {
    display: inline-block;
    overflow: hidden;
    padding: 0 1.2em;
    border: 0.01rem solid #e26704;
    box-shadow: inset 1px 1px rgba(255, 255, 255, 0.1);
    border-radius: 0.02rem;
    background-color: #ff801a;
    color: #fff;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
}
.yo-btn:focus, .yo-btn:active {
    opacity: .8;
}
.yo-btn-s {
    height: 0.28rem;
    line-height: 0.28rem;
    font-size: 0.12rem;
}
.yo-btn-m {
    height: 0.36rem;
    line-height: 0.36rem;
    font-size: 0.14rem;
}
.yo-btn-l {
    height: 0.44rem;
    line-height: 0.44rem;
    font-size: 0.16rem;
}
.yo-btn-stacked {
    display: block;
    width: 100%;
    clear: both;
}

.yo-btn-disabled {
    border-color: #bbb;
    background-color: #ccc;
    color: #f9f9f9;
    cursor: not-allowed;
}
.yo-btn-disabled, .yo-btn-disabled:focus, .yo-btn-disabled:active {
    opacity: .4;
}

/**
 * widget: yo-dialog
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-dialog
 * variables length(12)
 * @param {default | String} $name 定义dialog名称
 * @param {default | Length | null} $width 定义dialog宽度
 * @param {default | Length} $height 定义dialog高度
 * @param {default | Length} $radius 定义dialog圆角
 * @param {default | Number} $shadow-opacity 定义dialog阴影透明度
 * @param {default | Color} $bordercolor 定义dialog边框色
 * @param {default | Length} $hd-height 定义dialog头部高度
 * @param {default | Color} $hd-bgcolor 定义dialog头部背景色
 * @param {default | Color} $title-color 定义dialog标题文本色
 * @param {default | Length} $title-font-size 定义dialog标题字号
 * @param {default | Length} $bd-padding 定义dialog主体补白
 * @param {default | Length} $bd-font-size 定义dialog主体字号
 */
.yo-dialog {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    flex-direction: column;
    position: fixed;
    z-index: 1001;
    overflow: hidden;
    border-radius: 0.05rem;
    box-shadow: 0 0 5px rgba(221, 221, 221, 0.5);
    border: 1px solid #ddd;
    min-width: 2.8rem;
    max-width: 90%;
    height: 3rem;
    background: #fff;
    text-align: center;
}
.yo-dialog > .hd {
    position: relative;
    height: 0.44rem;
    background: white;
    line-height: 0.44rem;
    margin-bottom: -.2rem;
}
.yo-dialog > .hd .title {
    overflow: hidden;
    height: 100%;
    margin: 0 60px;
    font-size: 0.16rem;
}
.yo-dialog > .hd .regret,
.yo-dialog > .hd .affirm {
    position: absolute;
    top: 0;
}
.yo-dialog > .hd .regret {
    left: .1rem;
}
.yo-dialog > .hd .affirm {
    right: .1rem;
}
.yo-dialog > .bd {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    padding: 0.16rem 0.1rem 0.15rem;
    font-size: 0.16rem;
}
.yo-dialog > .ft {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    text-align: center;
}
.yo-dialog > .ft .yo-btn {
    border-radius: 0;
    border-color: #ddd;
    background-color: #fff;
    color: #00afc7;
}
.yo-dialog > .ft > .yo-btn {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    border-width: 1px 0 0 0;
}
.yo-dialog > .ft > .yo-btn:last-child:not(:only-child), .yo-dialog > .ft > .yo-btn:only-child {
    font-weight: bold;
}
.yo-dialog > .ft > .yo-btn:last-child:not(:only-child) {
    border-left-width: 1px;
}
.yo-dialog > .ft > .yo-btn:focus, .yo-dialog > .ft > .yo-btn:active {
    background-color: #f9f9f9;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-popup
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 -----------------------
 * @method yo-popup
 * variables length(12)
 * @param {default | String} $name 定义popup名称
 * @param {default | Length | null} $width 定义popup宽度
 * @param {default | Length} $height 定义popup高度
 * @param {default | Length} $radius 定义popup圆角
 * @param {default | Number} $shadow-opacity 定义popup阴影透明度
 * @param {default | Color} $bordercolor 定义popup边框色
 * @param {default | Length} $hd-height 定义popup头部高度
 * @param {default | Color} $hd-bgcolor 定义popup头部背景色
 * @param {default | Color} $title-color 定义popup标题文本色
 * @param {default | Length} $title-font-size 定义popup标题字号
 * @param {default | Length} $bd-padding 定义popup主体补白
 * @param {default | Length} $arrow-size 定义popup箭头高度
 */
.yo-popup {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    flex-direction: column;
    position: absolute;
    z-index: 2001;
    border-radius: 0.03rem;
    box-shadow: 0 0 5px rgba(221, 221, 221, 0.5);
    border: 1px solid #ddd;
    min-width: 2.8rem;
    min-height: 1rem;
    height: 3rem;
    background: #fff;
}
.yo-popup > .arrow::after {
    position: absolute;
    content: "◆";
    color: #fff;
    font-size: 0.24rem;
    line-height: 1;
}
.yo-popup .arrow-top::after,
.yo-popup .arrow-down::after {
    -webkit-transform: translate(-50%);
    transform: translate(-50%);
    left: 50%;
}
.yo-popup .arrow-top::after {
    top: -0.11rem;
    text-shadow: 0 -1px #ddd;
}
.yo-popup .arrow-down::after {
    bottom: -0.11rem;
    text-shadow: 0 1px #ddd;
}
.yo-popup .arrow-right::after,
.yo-popup .arrow-left::after {
    -webkit-transform: translate(0, -50%);
    transform: translate(0, -50%);
    top: 50%;
}
.yo-popup .arrow-right::after {
    right: -0.11rem;
    text-shadow: 1px 0 #ddd;
}
.yo-popup .arrow-left::after {
    left: -0.11rem;
    text-shadow: -1px 0 #ddd;
}
.yo-popup .arrow-extra.arrow::after {
    color: #eee;
}
.yo-popup > .hd,
.yo-popup > .bd {
    position: relative;
    z-index: 2;
}
.yo-popup > .hd {
    height: 0.5rem;
    border-bottom: 1px solid #ddd;
    background: #eee;
    line-height: 0.5rem;
    text-align: center;
}
.yo-popup > .hd .title {
    overflow: hidden;
    height: 100%;
    margin: 0 60px;
    font-size: 0.16rem;
}
.yo-popup > .hd .regret,
.yo-popup > .hd .affirm {
    position: absolute;
    top: 0;
}
.yo-popup > .hd .regret {
    left: 10px;
}
.yo-popup > .hd .affirm {
    right: 10px;
}
.yo-popup > .bd {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    padding: 0.1rem;
}
.yo-popup > .ft {
    padding: .1rem 0;
    border-top: 1px solid #ddd;
    text-align: center;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-number
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-number
 * variables length(8)
 * @param {default | String} $name 定义yo-number名称
 * @param {default | Length} $width 定义yo-number宽度
 * @param {default | Length} $height 定义yo-number高度
 * @param {default | Color} $bordercolor 定义yo-number边框色
 * @param {default | Color} $color 定义yo-number输入框文本色
 * @param {default | Color} $sign-bgcolor 定义yo-number加减号背景色
 * @param {default | Color} $sign-color 定义yo-number加减号文本色
 * @param {default | Color} $disabled-sign-color 定义yo-number禁用文本色
 */
.yo-number {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: inline-flex;
    overflow: hidden;
    width: 1.2rem;
    height: 0.36rem;
    line-height: 0.36rem;
    border: 1px solid #ddd;
    border-radius: 0;
    box-shadow: 1px 1px 1px rgba(221, 221, 221, 0.3);
    background-color: #fff;
    font-size: 0;
    vertical-align: middle;
}
.yo-number > .minus,
.yo-number > .plus,
.yo-number > .input {
    text-align: center;
}
.yo-number > .minus,
.yo-number > .plus {
    display: block;
    width: .35rem;
    background-color: #fafafa;
    color: #999;
    font-size: 30px;
    font-family: arial;
    cursor: pointer;
}
.yo-number > .minus.disabled,
.yo-number > .plus.disabled {
    color: #f9f9f9;
    cursor: not-allowed;
}
.yo-number > .input {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    border: 1px solid #ddd;
    border-width: 0 1px;
    box-shadow: inset 1px 1px 1px rgba(221, 221, 221, 0.1);
    border-radius: 0;
    color: #212121;
    font-size: .16rem;
}
.yo-number > .input, .yo-number > .input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    appearance: none;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-select
 * Author: joy.du(飘零雾雨)
 * Time: 2014.11.13
 -----------------------
 * @method yo-select
 * variables length(4)
 * @param {default | String} $name 定义select名称
 * @param {default | Length} $width 定义select显示的子项个数
 * @param {default | Length} $height 定义select子项高度
 * @param {default | Color} $bordercolor 定义select边框色
 */
.yo-select {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    position: relative;
    overflow: hidden;
    height: 1.5rem;
    line-height: 0.3rem;
}
.yo-select::before {
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 0.3rem;
    margin-top: -0.15rem;
    content: "\0020";
    border: 1px solid #ddd;
    border-width: 1px 0;
}
.yo-select-item, .yo-select-item-list, .yo-select-item ul {
    height: 100%;
}
.yo-select-item {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    position: relative;
    z-index: 2;
    text-align: center;
}
.yo-select-item-list ul {
    position: relative;
}
.yo-select-item-list li {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 0.3rem;
}
.yo-select-item-list li.disabled {
    opacity: .4;
}
.yo-select-item-tag {
    position: absolute;
    top: 50%;
    right: .1rem;
    margin-top: -0.15rem;
}
.yo-select > .mask {
    position: absolute;
    z-index: 3;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "\0020";
    pointer-events: none;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-tab
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-tab
 * variables length(14)
 * @param {default | String} $name 定义yo-tab名称
 * @param {default | Boole} $is-border 定义yo-tab是否有边框
 * @param {default | Boole} $is-item-border 定义yo-tab是否有间隔线
 * @param {default | Length} $height 定义yo-tab高度
 * @param {default | Color} $bordercolor 定义yo-tab边框色
 * @param {default | Color} $bgcolor 定义yo-tab背景色
 * @param {default | Color} $color 定义yo-tab文本色
 * @param {default | Color} $on-bordercolor 定义yo-tab激活边框色
 * @param {default | Color} $on-bgcolor 定义yo-tab激活背景色
 * @param {default | Color} $on-color 定义yo-tab激活文本色
 * @param {default | Color} $font-size 定义yo-tab文本字号
 * @param {default | Color} $x-ico-size 定义yo-tab水平ico大小
 * @param {default | Color} $y-ico-size 定义yo-tab垂直ico大小
 * @param {default | Color} $only-ico-size 定义yo-tab仅有ico大小
 */
.yo-tab {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    height: 0.49rem;
    border-color: #ddd;
    background-color: #fafafa;
    text-align: center;
    line-height: 0.49rem;
}
.yo-tab > .item {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    border-top: 1px solid #ddd;
    color: #212121;
}
.yo-tab > .item:not(:first-child) {
    border-left-color: #ddd;
}
.yo-tab > .item:active, .yo-tab > .item.on {
    background-color: #fff;
    color: #000;
}
.yo-tab > .item-top-ico {
    padding-top: .04rem;
    line-height: .2rem;
}
.yo-tab > .item-top-ico .yo-ico {
    display: block;
    font-size: 0.2rem;
}
.yo-tab > .item-left-ico .yo-ico {
    font-size: 0.24rem;
}
.yo-tab > .item-only-ico .yo-ico {
    font-size: 0.32rem;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-tip
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-tip
 * variables length(5)
 * @param {default | String} $name 定义yo-tip名称
 * @param {default | Length} $padding 定义yo-tip内补白
 * @param {default | Length} $radius 定义yo-tip圆角
 * @param {default | Color} $bgcolor 定义yo-tip背景色
 * @param {default | Color} $color 定义yo-tip文本色
 */
.yo-tip {
    position: fixed;
    min-width: 1rem;
    max-width: 90%;
    z-index: 3001;
    padding: 0.06rem 0.15rem;
    border-radius: 0.05rem;
    background-color: rgba(0, 0, 0, 0.5);
    color: #fff;
    text-align: center;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-mask
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-mask
 * variables length(2)
 * @param {default | String} $name 定义yo-mask名称
 * @param {default | Color} $bgcolor 定义yo-mask背景色
 */
.yo-mask {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1000;
    background-color: rgba(255, 255, 255, 0.5);
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-index
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-index
 * variables length(4)
 * @param {default | String} $name 定义yo-index名称
 * @param {default | Length} $width 定义yo-index宽度
 * @param {default | Color} $color 定义yo-index文本色
 * @param {default | Length} $font-size 定义yo-index文本字号
 */
.yo-index {
    width: 0.3rem;
    text-transform: uppercase;
    color: #555;
    font-size: 0.12rem;
    line-height: 1.1;
    text-align: center;
}
.yo-index .ellipsis {
    display: inline-block;
    width: 0.06rem;
    height: 0.06rem;
    border-radius: 50%;
    background-color: #555;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/fragment/classes.scss
 * fragment的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Fragment: yo-list
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-list
 * variables length(14)
 * @param {default|String} $name 定义list名称
 * @param {default|Length} $margin 定义list外边距
 * @param {default|Boole} $is-outline 定义list是否需要轮廓（即外边框）
 * @param {default|Length} $radius 定义list圆角
 * @param {default|Color} $bordercolor 定义list边框色
 * @param {default|Length} $item-padding 定义list项的内补白
 * @param {default|Length} $label-padding 定义list分组标题内补白
 * @param {default|Color} $label-bgcolor 定义list分组标题背景色
 * @param {default|Color} $active-bgcolor 定义list点击反馈背景色
 * @param {default|Color} $on-bgcolor 定义list选中背景色
 * @param {default|Color} $item-bordercolor 定义list子项边框色
 * @param {default|Color} $label-bordercolor 定义list子项组头边框色
 * @param {default|Length} $item-font-size 定义list项字号
 * @param {default|Length} $label-font-size 定义list列表组头字号
 */
.yo-list {
    margin: -0.01rem -0.01rem 0 -0.01rem;
}
.yo-list > .label,
.yo-list > .item,
.yo-list > .yo-panel > .front {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
    align-items: center;
}
.yo-list > .label > .mark:not(:last-child),
.yo-list > .label > .yo-ico:not(:last-child),
.yo-list > .item > .mark:not(:last-child),
.yo-list > .item > .yo-ico:not(:last-child),
.yo-list > .yo-panel > .front > .mark:not(:last-child),
.yo-list > .yo-panel > .front > .yo-ico:not(:last-child) {
    margin-right: .1rem;
}
.yo-list > .label > .flex,
.yo-list > .item > .flex,
.yo-list > .yo-panel > .front > .flex {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
}
.yo-list > .label > .mark,
.yo-list > .label > .yo-ico,
.yo-list > .label > .col,
.yo-list > .label > .flex,
.yo-list > .item > .mark,
.yo-list > .item > .yo-ico,
.yo-list > .item > .col,
.yo-list > .item > .flex,
.yo-list > .yo-panel > .front > .mark,
.yo-list > .yo-panel > .front > .yo-ico,
.yo-list > .yo-panel > .front > .col,
.yo-list > .yo-panel > .front > .flex {
    display: block;
}
.yo-list > .label.tr,
.yo-list > .item.tr,
.yo-list > .yo-panel > .front.tr {
    padding: 0;
}
.yo-list > .label {
    margin-top: -1px;
    padding: 0.03rem 0.1rem;
    border: 1px solid #ddd;
    border-width: 1px 0;
    background-color: #fafafa;
    color: #9e9e9e;
    font-size: 0.13rem;
    font-weight: normal;
}
.yo-list > .label > .col {
    padding: 0.03rem 0.1rem;
}
.yo-list > .item,
.yo-list > .yo-panel > .front {
    padding: 0.11rem;
}
.yo-list > .item {
    min-height: .44rem;
    border-bottom: 0.01rem solid #ddd;
    background-color: #fff;
    color: #212121;
    font-size: 0.14rem;
}
.yo-list > .item:last-child {
    margin-bottom: -1px;
}
.yo-list > .item-stacked {
    display: block;
}
.yo-list > .item-stacked > .mark {
    padding-bottom: 5px;
}
.yo-list > .item-input > .yo-input {
    height: auto;
    padding: 0;
    border: 0;
}
.yo-list > .item-input, .yo-list > .item-active, .yo-list > .item-on, .yo-list > .item-light {
    cursor: pointer;
}
.yo-list > .item.item-active:active, .yo-list > .item.item-light {
    background-color: #f8f8f8;
}
.yo-list > .item > .col {
    padding: 0.11rem;
}
.yo-list > .yo-panel {
    display: block;
    padding: 0;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-index
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-index
 * variables length(4)
 * @param {default | String} $name 定义yo-index名称
 * @param {default | Length} $width 定义yo-index宽度
 * @param {default | Color} $color 定义yo-index文本色
 * @param {default | Length} $font-size 定义yo-index文本字号
 */
.yo-index {
    width: 0.3rem;
    text-transform: uppercase;
    color: #555;
    font-size: 0.12rem;
    line-height: 1.1;
    text-align: center;
}
.yo-index .ellipsis {
    display: inline-block;
    width: 0.06rem;
    height: 0.06rem;
    border-radius: 50%;
    background-color: #555;
}

/**
 * Widget: yo-group
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-group
 * variables length(2)
 * @param {default | String} $name 定义yo-group名称
 * @param {default | Length} $top 定义yo-group顶部偏移值
 */
.yo-group {
    position: absolute;
    top: 0.95rem;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: hidden;
}
.yo-group > .sticky,
.yo-group > .scroll-index {
    position: absolute;
    top: 0;
    right: 0;
}
.yo-group > .sticky {
    left: 0;
    padding: 0.03rem 0.1rem;
    background-color: #fafafa;
    color: #9e9e9e;
}
.yo-group .no-data {
    height: 100%;
    padding-top: 1rem;
    text-align: center;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-search
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-search
 * variables length(15)
 * @param {default | String} $name 定义yo-search名称
 * @param {default | Length} $height 定义yo-search高度
 * @param {default | Length} $font-size 定义yo-search文本大小
 * @param {default | Length} $op-padding 定义yo-search内补白
 * @param {default | Length} $radius 定义yo-search圆角
 * @param {default | Color} $bordercolor 定义yo-search边框色
 * @param {default | Color} $bgcolor 定义yo-search背景色
 * @param {default | Color} $color 定义yo-search文本色
 * @param {default | Color} $on-bordercolor 定义yo-search激活边框色
 * @param {default | Color} $on-bgcolor 定义yo-search激活背景色
 * @param {default | Color} $placeholder-color 定义yo-search占位背景色
 * @param {default | Color} $ico-color 定义yo-search 操作区ico颜色
 * @param {default | Color} $cancel-color 定义yo-search取消按钮颜色
 * @param {default | Color} $op-bgcolor 定义yo-search搜索区域背景色
 * @param {default | Color} $mask-bgcolor 定义yo-search遮罩背景色
 */
.yo-search {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    flex-direction: column;
}
.yo-search > .operate {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    position: relative;
    overflow: hidden;
    z-index: 2501;
    font-size: 0.14rem;
    line-height: 0.3rem;
    padding: 0.1rem;
    border-bottom: 1px solid #ddd;
    background-color: #fff;
}
.yo-search > .operate > .action,
.yo-search > .operate > .action > .label,
.yo-search > .operate > .cancel {
    -webkit-transition: all 0.2s ease-in;
    transition: all 0.2s ease-in;
}
.yo-search > .operate > .action {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    -webkit-transform: translatez(0);
    transform: translatez(0);
    position: relative;
    height: 0.3rem;
}
.yo-search > .operate > .action > .input {
    -webkit-transform: translatez(0);
    transform: translatez(0);
    width: 100%;
    height: 100%;
    padding: 0 .3rem;
    -webkit-appearance: none;
    appearance: none;
    border: 1px solid #ddd;
    border-radius: 0.05rem;
    background-color: #ddd;
    color: #212121;
    font-size: 0.14rem;
}
.yo-search > .operate > .action > .yo-ico-delete,
.yo-search > .operate > .action > .yo-ico-fresh,
.yo-search > .operate > .action > .yo-ico-stop {
    display: none;
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
    padding: 0 .08rem;
    color: #999;
}
.yo-search > .operate > .action > .label {
    position: absolute;
    top: 0;
    left: 50%;
    -webkit-transform: translatex(-50%) translatez(0);
    transform: translatex(-50%) translatez(0);
    color: #fff;
    word-spacing: -.05rem;
}
.yo-search > .operate > .action > .label > .yo-ico-search {
    vertical-align: top;
    margin: 0 .08rem 0 .1rem;
}
.yo-search > .operate > .cancel {
    display: block;
    -webkit-transform: translatez(0);
    transform: translatez(0);
    overflow: hidden;
    width: 0;
    color: #00afc7;
    white-space: nowrap;
    text-align: right;
}
.yo-search > .operate-on > .action > .label {
    left: 0;
    -webkit-transform: translatex(0) translatez(0);
    transform: translatex(0) translatez(0);
}
.yo-search > .operate-on > .action > .yo-ico-delete {
    display: inline-block;
}
.yo-search > .operate-on > .cancel {
    width: .6rem;
    padding-right: .1rem;
}
.yo-search > .operate-fresh > .action > .input, .yo-search > .operate-stop > .action > .input {
    text-align: center;
}
.yo-search > .operate-fresh > .action > .label, .yo-search > .operate-stop > .action > .label {
    display: none;
}
.yo-search > .operate-fresh > .action > .yo-ico-fresh {
    display: inline-block;
}
.yo-search > .operate-stop > .action > .yo-ico-stop {
    display: inline-block;
}
.yo-search > .cont {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
    display: none;
    position: absolute;
    top: .95rem;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(255, 255, 255, 0.9);
}
.yo-search > .cont > .recommend,
.yo-search > .cont > .result {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
}
.yo-search > .cont > .recommend > .yo-group,
.yo-search > .cont > .result > .yo-group {
    top: 0;
}
.yo-search > .cont-on {
    display: block;
}
.yo-search-modal {
    position: fixed;
    z-index: 2501;
    top: 0;
    right: 0;
    left: 0;
    height: 100%;
}
.yo-search-modal > .cont {
    position: relative;
    top: 0;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-switch
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-switch
 * variables length(4)
 * @param {default | String} $name 定义yo-switch名称
 * @param {default | Length} $width 定义yo-switch宽度
 * @param {default | Color} $color 定义yo-switch文本色
 * @param {default | Length} $font-size 定义yo-switch文本字号
 */
.yo-switchable {
    position: relative;
    overflow: hidden;
    width: 100%;
    text-align: center;
}
.yo-switchable > .cont {
    position: relative;
    white-space: nowrap;
    font-size: 0;
    font-family: arial;
}
.yo-switchable > .cont > .item {
    display: inline-block;
    font-size: 14px;
    font-family: Helvetica Neue, Helvetica, STHeiTi, sans-serif;
    width: 100%;
    background-color: #eee;
    min-height: .1rem;
}
.yo-switchable > .cont > .item .img {
    max-width: 100%;
    max-height: 100%;
    height: auto;
}
.yo-switchable > .index {
    position: absolute;
    bottom: .1rem;
    left: 50%;
    -webkit-transform: translate(-50%, 0) translatez(0);
    transform: translate(-50%, 0) translatez(0);
}
.yo-switchable > .index > li {
    float: left;
    margin: 0 .05rem;
    width: 0.1rem;
    height: 0.1rem;
    border-radius: 50%;
    background-color: #85c8d1;
}
.yo-switchable > .index > li.on {
    background-color: #09a5c4;
}
.yo-switchable > .yo-ico {
    position: absolute;
    top: 50%;
    -webkit-transform: translate(0, -50%) translatez(0);
    transform: translate(0, -50%) translatez(0);
    width: 0.44rem;
    height: 0.44rem;
    border-radius: 50%;
    background-color: #09a5c4;
    color: #fff;
    line-height: .44rem;
    cursor: pointer;
}
.yo-switchable > .yo-ico-prev {
    left: 0;
}
.yo-switchable > .yo-ico-next {
    right: 0;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * widget: yo-switch
 * Author: joy.du(飘零雾雨)
 * Time: 2014.11.14
 -----------------------
 * @method yo-switch
 * variables length(6)
 * @param {default | String} $name 定义switch名称
 * @param {default | Color} $checked-bordercolor 定义switch激活边框色
 * @param {default | Color} $checked-bgcolor 定义switch激活背景色
 * @param {default | Color} $bordercolor 定义switch边框色
 * @param {default | Color} $bgcolor 定义switch背景色
 * @param {default | Color} $ball-color 定义switch滑块色
 */
.yo-switch {
    display: inline-block;
}
.yo-switch > input {
    display: none;
}
.yo-switch > .track {
    display: inline-block;
    position: relative;
    width: .6rem;
    height: .32rem;
    margin: 0;
    cursor: pointer;
    border: 0.02rem solid #ddd;
    border-radius: .16rem;
    background-color: #fafafa;
    vertical-align: middle;
    -webkit-transition: border-color 0.1s ease-out, background-color 0.1s ease-out;
    transition: border-color 0.1s ease-out, background-color 0.1s ease-out;
}
.yo-switch > .track > .handle {
    position: absolute;
    top: 0;
    left: 0;
    width: 0.28rem;
    height: 0.28rem;
    border-radius: 50%;
    background-color: #fff;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    -webkit-transition: transform 0.1s ease-out;
    transition: transform 0.1s ease-out;
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0) translatez(0);
}
.yo-switch > input:checked + .track {
    border-color: #4bd763;
    background-color: #4bd763;
}
.yo-switch > input:checked + .track > .handle {
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0) translatez(0);
}
.yo-switch > input:disabled + .track {
    opacity: .4;
    border-color: #bbb;
    background-color: #bbb;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-panel
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-panel
 * variables length(5)
 * @param {default | String} $name 定义yo-panel名称
 * @param {default | Length} $action-width 定义action宽度
 * @param {default | Color} $action-bgcolor 定义action背景色
 */
.yo-panel {
    position: relative;
    overflow: hidden;
}
.yo-panel > .front {
    position: relative;
    z-index: 2;
    background-color: #fff;
}
.yo-panel > .action {
    position: absolute;
    top: 0;
    right: 0;
    overflow: hidden;
    width: 1rem;
    height: 100%;
    background-color: #eee;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-rating
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-rating
 * variables length(5)
 * @param {default | String} $name 定义yo-rating名称
 * @param {default | Length} $item-width 定义yo-rating 单项宽度
 * @param {default | Length} $item-height 定义yo-rating 单项高度
 * @param {default | Color} $url 定义yo-rating 图片url
 */
.yo-rating {
    display: inline-block;
    position: relative;
    width: 1.5rem;
    height: 0.3rem;
    overflow: hidden;
}
.yo-rating,
.yo-rating > .index,
.yo-rating > .item {
    background: url("../../../bgimg/star.png") repeat-x;
}
.yo-rating > .index,
.yo-rating > .item {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    line-height: 10;
}
.yo-rating > .index {
    background-position: 0 -0.3rem;
}
.yo-rating > .item {
    z-index: 3;
    width: 20%;
    background-position: 0 100px;
    cursor: pointer;
}
.yo-rating > .item:nth-of-type(2) {
    left: 20%;
}
.yo-rating > .item:nth-of-type(2):hover {
    width: 40%;
}
.yo-rating > .item:nth-of-type(3) {
    left: 40%;
}
.yo-rating > .item:nth-of-type(3):hover {
    width: 60%;
}
.yo-rating > .item:nth-of-type(4) {
    left: 60%;
}
.yo-rating > .item:nth-of-type(4):hover {
    width: 80%;
}
.yo-rating > .item:nth-of-type(5) {
    left: 80%;
}
.yo-rating > .item:nth-of-type(5):hover {
    width: 100%;
}
.yo-rating > .item:hover {
    z-index: 2;
    left: 0 !important;
    background-position: 0 -0.3rem;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $appearance 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-dblist
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-dblist
 * variables length(5)
 * @param {default | String} $name 扩展的名称
 * @param {default | Length} $aside-width 侧边栏宽度
 * @param {default | Length} $aside-order 侧边栏顺序
 */
.yo-dblist {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    height: 100%;
}
.yo-dblist > .item {
    position: relative;
    min-width: .1rem;
}
.yo-dblist > .item:not(:first-child) {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    display: block;
    width: 100%;
}
