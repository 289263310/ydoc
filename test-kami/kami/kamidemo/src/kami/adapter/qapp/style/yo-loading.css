@charset "UTF-8";
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Element: yo-loading
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 -----------------------
 * @method loading
 * variables length(4)
 * @param {defailt | String} $name 定义名称
 * @param {defailt | Length} $size 定义尺寸
 * @param {defailt | Color} $bordercolor 定义边框色
 * @param {defailt | Color} $bgcolor 定义背景色
 */
.yo-loading {
  display: block;
  position: absolute;
  z-index: 9999;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;
  min-width: 0.7rem;
  min-height: 0.7rem;
  text-align: center; }
  .yo-loading:before, .yo-loading:after {
    position: absolute;
    content: "\0020"; }
  .yo-loading:before {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(255, 255, 255, 0.5); }
  .yo-loading:after {
    top: 50%;
    left: 50%;
    width: 0.04em;
    height: 0.04em;
    margin-top: -.02em;
    margin-left: -.02em;
    background: transparent;
    border-radius: 50%;
    -webkit-animation: loading 1s infinite linear;
    -moz-animation: loading 1s infinite linear;
    animation: loading 1s infinite linear;
    -webkit-transform-origin: center;
    -moz-transform-origin: center;
    transform-origin: center;
    box-shadow: .35em -.29em, .47em -.03em 0 .01em, .4em .20em 0 .02em, .25em .38em 0 .03em, 0 .44em 0 .04em, -.22em .38em 0 .05em, -.38em .24em 0 .05em, -.42em 0 0 .06em, -.36em -.21em 0 .06em, -.2em -.36em 0 .06em, 0 -.41em 0 .07em;
    color: #666;
    font-size: 0.5rem; }
  .yo-loading > .inner {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    margin-top: 0.4rem;
    color: #666;
    font-size: .14rem; }
@-webkit-keyframes loading {
  from {
    -webkit-transform: rotatez(0); }
  to {
    -webkit-transform: rotatez(360deg); } }
@keyframes loading {
  from {
    transform: rotatez(0); }
  to {
    transform: rotatez(360deg); } }

/*# sourceMappingURL=yo-loading.css.map */
