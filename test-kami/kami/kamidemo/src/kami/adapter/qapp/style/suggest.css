@charset "UTF-8";
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/core/reset.scss
 * Css Reset
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
*,
::before,
::after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
}

html {
    background-color: #fafafa;
    color: #212121;
    font-size: 100px;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}

body {
    font-size: 16px;
}

body, ul, ol, dl, dd, h1, h2, h3, h4, h5, h6, figure, form, fieldset, legend, input, textarea, button, p, blockquote, th, td, pre, xmp {
    margin: 0;
    padding: 0;
}

body, input, textarea, button, select, pre, tt, code, kbd, samp, optgroup, option {
    line-height: 1.5;
    font-family: "Helvetica Neue", Helvetica, STHeiTi, sans-serif;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
    table-layout: fixed;
    text-align: left;
}

caption, th {
    text-align: inherit;
}

ul, ol, menu {
    list-style: none;
}

fieldset, img {
    border: 0 none;
}

img, object, input, textarea, button, select {
    vertical-align: top;
}

article, aside, footer, header, section, nav, figure, figcaption, hgroup, details, menu, main {
    display: block;
}

audio, canvas, video {
    display: inline-block;
}

h1, h2, h3, h4, h5, h6, input, textarea, button, select, small, big {
    font-size: 100%;
}

address, cite, dfn, em, i, optgroup, var {
    font-style: normal;
}

blockquote:before, blockquote:after, q:before, q:after {
    content: "\0020";
}

textarea {
    overflow: auto;
}

textarea, input, button {
    outline: none;
    border-radius: 0;
}

button::-moz-focus-inner, input::-moz-focus-inner {
    padding: 0;
    border: 0 none;
}

input[type="button"], input[type="submit"], input[type="reset"], input[type="file"]::-webkit-file-upload-button {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

mark {
    background-color: transparent;
}

ins, s, u, del {
    text-decoration: none;
}

a, img {
    -webkit-touch-callout: none;
}

a {
    color: #00afc7;
    text-decoration: none;
}
a:hover {
    color: #ff6600;
}

.g-clear::after, .g-mod::after, #bd::after {
    display: block;
    overflow: hidden;
    clear: both;
    height: 0;
    content: "\0020";
}

@font-face {
    font-family: "fontawesome-webfont";
    src: url("http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.eot");
    src: url("http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.eot?#iefix") format("embedded-opentype"), url("http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.woff") format("woff"), url("http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.ttf") format("truetype"), url("http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.svg#iconfont") format("svg");
}
.yo-ico {
    font-family: "fontawesome-webfont" !important;
    font-style: normal;
    -webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: 0.1px;
    -moz-osx-font-smoothing: grayscale;
    vertical-align: middle;
}

html {
    -webkit-user-select: text;
    -moz-user-select: text;
    user-select: text;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Document Classes 约定文档级布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * document: doc
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method doc
 * @param {String} $name 定义page-name
 * @param {String} $fixed 定义头尾是否固定
 * @param {Length} $hd-gap 定义主体到viewport顶部的距离
 * @param {Length} $ft-gap 定义主体到viewport底部的距离
 */
/**
* document layout
* Author: joy.du(飘零雾雨)
* Time: 2013.10.17
*/
/**
 * module: m-code
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
.m-code {
    margin: 10px;
    padding: 10px;
    border-radius: 5px;
    background: #272822;
    color: #51bbe1;
    font-size: 20px;
}
.m-code .method {
    color: #93de08;
}
.m-code .bracket,
.m-code .colon {
    padding-right: 5px;
    color: #fff;
}
.m-code mark {
    background: none;
    color: #ccc;
    font-size: 16px;
}

/**
 * module: m-demo
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
.m-demo {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    margin: 10px;
}
.m-demo .device {
    position: relative;
    width: 365px;
    height: 792px;
    background: url(../../../../bgimg/phone@2x.png) no-repeat;
    background-size: 365px 792px;
}
.m-demo .device .stage {
    position: absolute;
    top: 104px;
    left: 23px;
    width: 320px;
    height: 576px;
    background-color: #fff;
}
.m-demo .code {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    margin: 10px;
    padding: 10px;
    border-left: 4px solid #D7DBE4;
    background-color: #F0F3F8;
    font-family: Monaco, Menlo, Consolas, "Courier New", monospace;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/widget/classes.scss
 * widget的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Fragment: yo-search
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-search
 * variables length(15)
 * @param {default | String} $name 定义yo-search名称
 * @param {default | Length} $height 定义yo-search高度
 * @param {default | Length} $font-size 定义yo-search文本大小
 * @param {default | Length} $op-padding 定义yo-search内补白
 * @param {default | Length} $radius 定义yo-search圆角
 * @param {default | Color} $bordercolor 定义yo-search边框色
 * @param {default | Color} $bgcolor 定义yo-search背景色
 * @param {default | Color} $color 定义yo-search文本色
 * @param {default | Color} $on-bordercolor 定义yo-search激活边框色
 * @param {default | Color} $on-bgcolor 定义yo-search激活背景色
 * @param {default | Color} $placeholder-color 定义yo-search占位背景色
 * @param {default | Color} $ico-color 定义yo-search 操作区ico颜色
 * @param {default | Color} $cancel-color 定义yo-search取消按钮颜色
 * @param {default | Color} $op-bgcolor 定义yo-search搜索区域背景色
 * @param {default | Color} $mask-bgcolor 定义yo-search遮罩背景色
 */
.yo-search {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    flex-direction: column;
}
.yo-search .operate {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    position: relative;
    overflow: hidden;
    font-size: 0.14rem;
    line-height: 0.3rem;
    padding: 0.1rem;
    border-bottom: 1px solid #dddddd;
    background-color: white;
}
.yo-search .operate > .action
> .action > .label,
.yo-search .operate > .cancel {
    -webkit-transition: all 0.2s ease-in;
    -moz-transition: all 0.2s ease-in;
    transition: all 0.2s ease-in;
}
.yo-search .operate > .action {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    -webkit-transform: translatez(0);
    -moz-transform: translatez(0);
    transform: translatez(0);
    position: relative;
    height: 0.3rem;
}
.yo-search .operate > .action > .input {
    -webkit-transform: translatez(0);
    -moz-transform: translatez(0);
    transform: translatez(0);
    width: 100%;
    height: 100%;
    padding: 0 .3rem;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border: 1px solid #dddddd;
    border-radius: 0.05rem;
    background-color: #dddddd;
    color: #212121;
    font-size: 0.14rem;
}
.yo-search .operate > .action > .yo-ico-delete,
.yo-search .operate > .action > .yo-ico-fresh,
.yo-search .operate > .action > .yo-ico-stop {
    display: none;
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
    padding: 0 .08rem;
    color: #999999;
}
.yo-search .operate > .action > .label {
    position: absolute;
    top: 0;
    left: 50%;
    -webkit-transform: translatex(-50%) translatez(0);
    -moz-transform: translatex(-50%) translatez(0);
    transform: translatex(-50%) translatez(0);
    color: white;
    word-spacing: -.05rem;
}
.yo-search .operate > .action > .label > .yo-ico-search {
    vertical-align: top;
    margin: 0 .08rem 0 .1rem;
}
.yo-search .operate > .cancel {
    -webkit-transform: translatez(0);
    -moz-transform: translatez(0);
    transform: translatez(0);
    overflow: hidden;
    width: 0;
    color: #00afc7;
    white-space: nowrap;
    text-align: right;
}
.yo-search .operate-on > .action > .label {
    left: 0;
    -webkit-transform: translatex(0) translatez(0);
    -moz-transform: translatex(0) translatez(0);
    transform: translatex(0) translatez(0);
}
.yo-search .operate-on > .action > .yo-ico-delete {
    display: inline-block;
}
.yo-search .operate-on > .cancel {
    width: .6rem;
    padding-right: .1rem;
}
.yo-search .operate-fresh > .action > .input, .yo-search .operate-stop > .action > .input {
    text-align: center;
}
.yo-search .operate-fresh > .action > .label, .yo-search .operate-stop > .action > .label {
    display: none;
}
.yo-search .operate-fresh > .action > .yo-ico-fresh {
    display: inline-block;
}
.yo-search .operate-stop > .action > .yo-ico-stop {
    display: inline-block;
}
.yo-search > .cont {
    display: none;
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    position: absolute;
    top: .51rem;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(255, 255, 255, 0.9);
}
.yo-search > .cont > .recommend,
.yo-search > .cont > .result {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
}
.yo-search > .cont-on {
    display: block;
}
.yo-search-modal {
    position: fixed;
    z-index: 2501;
    top: 0;
    right: 0;
    left: 0;
    height: 100%;
}
.yo-search-modal > .cont {
    position: relative;
    top: 0;
}

/**
 * search演示页面
 * Author: joy.du(飘零雾雨)
 * Time: 2014.4.1
 */


@charset "UTF-8";
/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/core/reset.scss
 * Css Reset
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
*,
::before,
::after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

html {
    background-color: #fafafa;
    color: #212121;
    font-size: 100px;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}

body {
    font-size: 16px;
}

body, ul, ol, dl, dd, h1, h2, h3, h4, h5, h6, figure, form, fieldset, legend, input, textarea, button, p, blockquote, th, td, pre, xmp {
    margin: 0;
    padding: 0;
}

body, input, textarea, button, select, pre, tt, code, kbd, samp, optgroup, option {
    line-height: 1.5;
    font-family: "Helvetica Neue", Helvetica, STHeiTi, sans-serif;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
    table-layout: fixed;
    text-align: left;
}

caption, th {
    text-align: inherit;
}

ul, ol, menu {
    list-style: none;
}

fieldset, img {
    border: 0 none;
}

img, object, input, textarea, button, select {
    vertical-align: top;
}

article, aside, footer, header, section, nav, figure, figcaption, hgroup, details, menu, main {
    display: block;
}

audio, canvas, video {
    display: inline-block;
}

h1, h2, h3, h4, h5, h6, input, textarea, button, select, small, big {
    font-size: 100%;
}

address, cite, dfn, em, i, optgroup, var {
    font-style: normal;
}

blockquote:before, blockquote:after, q:before, q:after {
    content: "\0020";
}

textarea {
    overflow: auto;
}

textarea, input, button {
    outline: none;
    border-radius: 0;
}

button::-moz-focus-inner, input::-moz-focus-inner {
    padding: 0;
    border: 0 none;
}

input[type="button"], input[type="submit"], input[type="reset"], input[type="file"]::-webkit-file-upload-button {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

mark {
    background-color: transparent;
}

ins, s, u, del {
    text-decoration: none;
}

input, textarea, button, a {
    -webkit-tap-highlight-color: transparent;
}

a, img {
    -webkit-touch-callout: none;
}

a {
    color: #00afc7;
    text-decoration: none;
}
a:hover {
    color: #ff6600;
}

.g-clear::after, .g-mod::after, #bd::after {
    display: block;
    overflow: hidden;
    clear: both;
    height: 0;
    content: "\0020";
}

@font-face {
    font-family: "fontawesome-webfont";
    src: url("http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.eot");
    src: url("http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.eot?#iefix") format("embedded-opentype"), url("http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.woff") format("woff"), url("http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.ttf") format("truetype"), url("http://source.qunarzz.com/fonts/fontawesome/4.2.0/fontawesome-webfont.svg#iconfont") format("svg");
}
.yo-ico {
    font-family: "fontawesome-webfont" !important;
    font-style: normal;
    -webkit-font-smoothing: antialiased;
    -webkit-text-stroke-width: 0.1px;
    -moz-osx-font-smoothing: grayscale;
    vertical-align: middle;
}

html {
    -webkit-user-select: text;
    -moz-user-select: text;
    user-select: text;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/layout/classes.scss
 * Global Document Classes 约定文档级布局方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * document: doc
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method doc
 * @param {String} $name 定义page-name
 * @param {String} $fixed 定义头尾是否固定
 * @param {Length} $hd-gap 定义主体到viewport顶部的距离
 * @param {Length} $ft-gap 定义主体到viewport底部的距离
 */
/**
* document layout
* Author: joy.du(飘零雾雨)
* Time: 2013.10.17
*/
/**
 * module: m-demo
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
.m-demo {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    margin: 10px;
}
.m-demo .device {
    position: relative;
    width: 365px;
    height: 792px;
    background: url(../../../../bgimg/phone@2x.png) no-repeat;
    background-size: 365px 792px;
}
.m-demo .device .stage {
    position: absolute;
    top: 104px;
    left: 23px;
    width: 320px;
    height: 576px;
    background-color: #fff;
}
.m-demo .code {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    margin: 10px;
    padding: 10px;
    border-left: 4px solid #D7DBE4;
    background-color: #F0F3F8;
    font-family: Monaco, Menlo, Consolas, "Courier New", monospace;
}

/**
 * module: m-code
 * Author: joy.du(飘零雾雨)
 * Time: 2013.10.17
 */
.m-code {
    margin: 10px;
    padding: 10px;
    border-radius: 5px;
    background: #272822;
    color: #51bbe1;
    font-size: 20px;
}
.m-code .method {
    color: #93de08;
}
.m-code .bracket,
.m-code .colon {
    padding-right: 5px;
    color: #fff;
}
.m-code mark {
    background: none;
    color: #ccc;
    font-size: 16px;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/element/classes.scss
 * element的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * widget: yo-switch
 * Author: joy.du(飘零雾雨)
 * Time: 2014.11.14
 -----------------------
 * @method yo-switch
 * variables length(9)
 * @param {default | String} $name 定义switch名称
 * @param {default | Color} $checked-bordercolor 定义switch激活边框色
 * @param {default | Color} $checked-bgcolor 定义switch激活背景色
 * @param {default | Color} $bordercolor 定义switch边框色
 * @param {default | Color} $bgcolor 定义switch背景色
 * @param {default | Color} $ball-color 定义switch滑块色
 * @param {default | Color} $disabled-bordercolor 定义switch禁用边框色
 * @param {default | Color} $disabled-bgcolor 定义switch禁用背景色
 * @param {default | Color} $disabled-ball-color 定义switch禁用滑块色
 */
.yo-switch[type="checkbox"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    position: relative;
    width: .6rem;
    height: .32rem;
    margin: 0;
    cursor: pointer;
    border: 0.02rem solid #dddddd;
    border-radius: .16rem;
    background-color: #fafafa;
    vertical-align: middle;
    -webkit-transition: all 0.2s ease-in-out;
    -moz-transition: all 0.2s ease-in-out;
    transition: all 0.2s ease-in-out;
}
.yo-switch[type="checkbox"]::before {
    display: block;
    content: "\0020";
    width: 0.28rem;
    height: 0.28rem;
    border-radius: 50%;
    background-color: white;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    -webkit-transition: all 0.2s ease-in-out;
    -moz-transition: all 0.2s ease-in-out;
    transition: all 0.2s ease-in-out;
    -webkit-transform: translate(0, 0) translatez(0);
    -moz-transform: translate(0, 0) translatez(0);
    transform: translate(0, 0) translatez(0);
}
.yo-switch[type="checkbox"]:active, .yo-switch[type="checkbox"]:focus {
    outline: none;
}
.yo-switch[type="checkbox"]:checked {
    border-color: #4bd763;
    background-color: #4bd763;
}
.yo-switch[type="checkbox"]:checked::before {
    -webkit-transform: translate(100%, 0) translatez(0);
    -moz-transform: translate(100%, 0) translatez(0);
    transform: translate(100%, 0) translatez(0);
}
.yo-switch[type="checkbox"]:disabled, .yo-switch[type="checkbox"]:disabled:checked {
    border-color: #dfdfdf;
    background-color: #dfdfdf;
}
.yo-switch[type="checkbox"]:disabled::before {
    background-color: #efefef;
}

/**
 * Directory: lib/core/variables.scss
 * CSS Variables 定义各种页面沙粒变量
 * Author: joy.du(飘零雾雨)
 * Edit: 2014.12.5
 */
/**
 * Directory: lib/core/classes.scss
 * Global Classes 约定常规解决方案
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 * 使用方法如下，结合variables中的$media-types：
    @include responsive(phone) {
        .foo {
            background: blue;
        }
    }
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * Directory: lib/fragment/classes.scss
 * fragment的基础构造
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 */
/**
 * Widget: yo-list
 * Author: joy.du(飘零雾雨)
 * Time: 2012.1.1
 ------------------------
 * @method yo-list
 * variables length(8)
 * @param {default|String} $name 定义list名称
 * @param {default|Boole} $is-outline 定义list是否需要轮廓（即外边框）
 * @param {default|Color} $bordercolor 定义list边框色
 * @param {default|Length} $item-padding 定义list项的内补白
 * @param {default|Length} $label-padding 定义list分组标题内补白
 * @param {default|Color} $label-bgcolor 定义list分组标题背景色
 * @param {default|Color} $on-bgcolor 定义list经过/选中背景色
 */
.yo-list {
    overflow: hidden;
    background-color: #fff;
}
.yo-list > .label,
.yo-list > .item {
    border-bottom: 1px solid #dddddd;
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
    align-items: center;
}
.yo-list > .label > .mark,
.yo-list > .item > .mark {
    margin-right: .1rem;
}
.yo-list > .label .col,
.yo-list > .item .col {
    padding: 0.1rem;
}
.yo-list > .label .col:first-child,
.yo-list > .item .col:first-child {
    margin-left: -0.1rem;
}
.yo-list > .label .col:last-child,
.yo-list > .item .col:last-child {
    margin-right: -0.1rem;
}
.yo-list > .label > .flex,
.yo-list > .item > .flex {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
}
.yo-list > .label {
    padding: 0.03rem 0.1rem;
    background-color: #fafafa;
}
.yo-list > .item {
    padding: 0.1rem;
    color: #212121;
}
.yo-list > .item-input {
    cursor: pointer;
}
.yo-list > .item-input > .input {
    -webkit-align-self: stretch;
    align-self: stretch;
    width: 100%;
    border: 0 none;
    background-color: transparent;
}
.yo-list > .item-active,
.yo-list > .item-on {
    cursor: pointer;
}
.yo-list > .item-active {
    background-color: #f8f8f8;
}
.yo-list > .item-on {
    background-color: #f8f8f8;
}

/**
 * list演示页面
 * Author: joy.du(飘零雾雨)
 * Time: 2014.4.1
 */
.yo-list .mark img {
    width: 80px;
    height: 50px;
}

.yo-scroll-wrap {
    position: absolute;
    z-index: 1;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    background: #ccc;
    box-sizing: border-box;
    overflow: hidden;
}
