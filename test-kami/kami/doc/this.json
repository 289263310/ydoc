{ _readableState:
   { objectMode: true,
     highWaterMark: 16,
     buffer: [],
     length: 0,
     pipes:
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _transformState: [Object],
        _destroyed: false,
        _transform: [Function] },
     pipesCount: 1,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null,
     resumeScheduled: false },
  readable: true,
  domain: null,
  _events:
   { end: [ [Object], [Object] ],
     prefinish: { [Function: g] listener: [Function] },
     unpipe: [Function: onunpipe],
     drain: [Function],
     error: [Function: onerror],
     close: { [Function: g] listener: [Function: onclose] },
     finish: { [Function: g] listener: [Function: onfinish] },
     data: [Function: ondata] },
  _maxListeners: undefined,
  _writableState:
   { objectMode: true,
     highWaterMark: 16,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     decodeStrings: true,
     defaultEncoding: 'utf8',
     length: 1,
     writing: true,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function],
     writecb: [Function],
     writelen: 1,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 1,
     prefinished: false,
     errorEmitted: false },
  writable: true,
  allowHalfOpen: true,
  _transformState:
   { afterTransform: [Function],
     needTransform: true,
     transforming: true,
     writecb: [Function],
     writechunk: <File "docsite/tmp/devspecification.json" <Buffer 7b 22 70 61 67 65 22 3a 7b 22 74 79 70 65 22 3a 22 68 74 6d 6c 22 2c 22 74 69 74 6c 65 22 3a 22 e5 bc 80 e5 8f 91 e8 a7 84 e8 8c 83 22 2c 22 6e 61 6d ... >>,
     writeencoding: 'utf8' } }
{ _readableState:
   { objectMode: true,
     highWaterMark: 16,
     buffer: [],
     length: 0,
     pipes:
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _transformState: [Object],
        _destroyed: false,
        _transform: [Function] },
     pipesCount: 1,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null,
     resumeScheduled: false },
  readable: true,
  domain: null,
  _events:
   { end: [ [Object], [Object] ],
     prefinish: { [Function: g] listener: [Function] },
     unpipe: [Function: onunpipe],
     drain: [Function],
     error: [Function: onerror],
     close: { [Function: g] listener: [Function: onclose] },
     finish: { [Function: g] listener: [Function: onfinish] },
     data: [Function: ondata] },
  _maxListeners: undefined,
  _writableState:
   { objectMode: true,
     highWaterMark: 16,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     decodeStrings: true,
     defaultEncoding: 'utf8',
     length: 1,
     writing: true,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function],
     writecb: [Function],
     writelen: 1,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 1,
     prefinished: false,
     errorEmitted: false },
  writable: true,
  allowHalfOpen: true,
  _transformState:
   { afterTransform: [Function],
     needTransform: true,
     transforming: true,
     writecb: [Function],
     writechunk: <File "docsite/tmp/history.json" <Buffer 7b 22 70 61 67 65 22 3a 7b 22 74 79 70 65 22 3a 22 68 74 6d 6c 22 2c 22 74 69 74 6c 65 22 3a 22 e5 8e 86 e5 8f b2 22 2c 22 6e 61 6d 65 22 3a 22 68 69 ... >>,
     writeencoding: 'utf8' } }
[00:38:11] Finished 'packJs' after 91 ms
{ _readableState:
   { objectMode: true,
     highWaterMark: 16,
     buffer: [],
     length: 0,
     pipes:
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _transformState: [Object],
        _destroyed: false,
        _transform: [Function] },
     pipesCount: 1,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null,
     resumeScheduled: false },
  readable: true,
  domain: null,
  _events:
   { end: [ [Object], [Object] ],
     prefinish: { [Function: g] listener: [Function] },
     unpipe: [Function: onunpipe],
     drain: [Function],
     error: [Function: onerror],
     close: { [Function: g] listener: [Function: onclose] },
     finish: { [Function: g] listener: [Function: onfinish] },
     data: [Function: ondata] },
  _maxListeners: undefined,
  _writableState:
   { objectMode: true,
     highWaterMark: 16,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     decodeStrings: true,
     defaultEncoding: 'utf8',
     length: 1,
     writing: true,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function],
     writecb: [Function],
     writelen: 1,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 1,
     prefinished: false,
     errorEmitted: false },
  writable: true,
  allowHalfOpen: true,
  _transformState:
   { afterTransform: [Function],
     needTransform: true,
     transforming: true,
     writecb: [Function],
     writechunk: <File "docsite/tmp/startup.json" <Buffer 7b 22 70 61 67 65 22 3a 7b 22 74 79 70 65 22 3a 22 68 74 6d 6c 22 2c 22 74 69 74 6c 65 22 3a 22 e8 b5 b7 e6 ad a5 22 2c 22 6e 61 6d 65 22 3a 22 73 74 ... >>,
     writeencoding: 'utf8' } }
{ _readableState:
   { objectMode: true,
     highWaterMark: 16,
     buffer: [],
     length: 0,
     pipes:
      { _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _transformState: [Object],
        _destroyed: false,
        _transform: [Function] },
     pipesCount: 1,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null,
     resumeScheduled: false },
  readable: true,
  domain: null,
  _events:
   { end: [ [Object], [Object] ],
     prefinish: { [Function: g] listener: [Function] },
     unpipe: [Function: onunpipe],
     drain: [Function],
     error: [Function: onerror],
     close: { [Function: g] listener: [Function: onclose] },
     finish: { [Function: g] listener: [Function: onfinish] },
     data: [Function: ondata] },
  _maxListeners: undefined,
  _writableState:
   { objectMode: true,
     highWaterMark: 16,
     needDrain: false,
     ending: false,
     ended: false,
     finished: false,
     decodeStrings: true,
     defaultEncoding: 'utf8',
     length: 1,
     writing: true,
     corked: 0,
     sync: true,
     bufferProcessing: false,
     onwrite: [Function],
     writecb: [Function],
     writelen: 1,
     bufferedRequest: null,
     lastBufferedRequest: null,
     pendingcb: 1,
     prefinished: false,
     errorEmitted: false },
  writable: true,
  allowHalfOpen: true,
  _transformState:
   { afterTransform: [Function],
     needTransform: true,
     transforming: true,
     writecb: [Function],
     writechunk: <File "docsite/tmp/tool.json" <Buffer 7b 22 70 61 67 65 22 3a 7b 22 74 79 70 65 22 3a 22 68 74 6d 6c 22 2c 22 74 69 74 6c 65 22 3a 22 e5 b7 a5 e5 85 b7 22 2c 22 6e 61 6d 65 22 3a 22 74 6f ... >>,
     writeencoding: 'utf8' } }
